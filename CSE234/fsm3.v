//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module FSM(

    //////////// CLOCK //////////
    input                           CLOCK_50,

    //////////// KEY //////////
    input              [3:0]        KEY,

    //////////// LED //////////
    output             [9:0]        LEDR,

    //////////// SW //////////
    input              [9:0]        SW
);

wire [31:0]counterWire;

wire decBTN = ~KEY[0];

counter c1(CLOCK_50, counterWire);
circuit cir(counterWire[22], decBTN, LEDR[2:0]);


endmodule

module counter(input clk, output reg [31:0]out);
    always @(posedge clk)
    begin
        out = out + 32'b1;
    end
endmodule

module circuit(input clk, decBTN, output [2:0]led);

	wire [1:0]temp;
	reg [1:0]register;

	always @(posedge clk)
	begin
		register <= temp;
	end

	assign temp[0] = (~register[1] & ~register[0]) | (~register[1] & ~register[0] & decBTN);
	assign temp[1] = (register[1] ^ register[0]);
	assign led[0] = (~register[1]);
	assign led[1] = (~register[1] & ~register[0]) | (register[1] & ~register[0]);
	assign led[2] = 1;


endmodule
